name: Reusable Pylama

on:
  workflow_call:
    inputs:
      exclude-files:
        type: string
        required: false
        default: ''
      report-only:
        type: boolean
        required: false
        default: False
      show-errors:
        type: boolean
        required: false
        default: True
      show-skipped:
        type: boolean
        required: false
        default: False

jobs:
  get-python-versions:
    name: Get Python Versions
    runs-on: ubuntu-latest
    outputs:
      version-matrix: ${{ steps.get-language-versions.outputs.latest-versions }}
    steps:
    - uses: ActionsToolbox/get-language-versions-action@9a98a01e87286f073bbee069547aeeea4ea30265 # v0.1.2
      id: get-language-versions
      with:
        language: "python"

  pylama:
    name: Pylama
    needs: get-python-versions
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-versions: ${{ fromJson(needs.get-python-versions.outputs.version-matrix) }}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
      - name: Set up Python ${{ matrix.python-versions }}
        uses: actions/setup-python@61a6322f88396a6271a6ee3565807d608ecaddd1 # v4.7.0
        with:
          python-version: ${{ matrix.python-versions }}
      - name: Run Pylama
        env:
            EXCLUDE_FILES: ${{ inputs.exclude-files }}
            REPORT_ONLY: ${{ inputs.report-only }}
            SHOW_ERRORS: ${{ inputs.show-errors }}
            SHOW_SKIPPED: ${{ inputs.show-skipped }}
        run: bash <(curl -s https://raw.githubusercontent.com/CICDToolbox/pylama/master/pipeline.sh)
